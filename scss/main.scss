$primary-color: #443737;
$second-color: #272121;
$primary: #93A1AC;
$show-home-image: true;
$primary-shadow-color:#d4d7dd;
$home-image: url(/img/background.jpg);
$LIGHTING_FLOOR: 1;
$LIGHTING_CEIL: 2;
$LIGHTING_FLAT: 3;


/*Colors:
LightBrown: #443737
DarkBrown: #272121
Red: #ff0000;
Orange: #ff4d00

*/

/*font
font-family: 'Teko', sans-serif;
font-family: 'Righteous',
cursive;
*/

//Mixin

@mixin linear-gradient($direction, $color-stops) {
    background: nth(nth($color-stops, 1), 1);
    background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
    background: linear-gradient($direction, $color-stops);
}

@mixin text3d($primary, $depth: 5, $shadowsteps: 5, $shadowincrementer: 3px, $shadowopacity: .5, $primaryshadowcolour: #ddd, $lighting: $LIGHTING_CEIL) {
    $predefinedShadows: (0 0 6px rgba($primaryshadowcolour, .05),
            0 -1px 3px rgba($primaryshadowcolour, .2),
            0 1px 5px rgba($primaryshadowcolour, .2));
    $value: ();

    @for $i from 1 through $depth {
        $num: $i + px;
        $hueadjust: $i;

        @if($lighting==$LIGHTING_FLOOR) {
            $hueadjust: ($i * 2 - $depth - 5) * 1%;
        }

        @else if($lighting==$LIGHTING_CEIL) {
            $hueadjust: -($i*2 + $depth - 10) * 1%;
        }

        @else if($lighting==$LIGHTING_FLAT) {
            $hueadjust: -$depth * 1%;
        }

        $colour: adjust-color($primary, $lightness: $hueadjust);
        $theShadow: 0 $num 0 $colour;
        $value: append($value, $theShadow, comma);
    }

    @for $i from 1 through $shadowsteps {
        @if($i >=length($predefinedShadows)) {
            $dist: $i * $shadowincrementer;
            $value: append($value, 0 $dist $dist rgba($primaryshadowcolour, $shadowopacity));
        }

        @else {
            $value: append($value, nth($predefinedShadows, $i));
        }
    }

    text-shadow: $value;
}

@mixin easeInOut {
    transition: all ease-in-out 200ms;
}

@mixin background {
    @if $show-home-image {
        &#bg-img {
            background: $home-image;
            background-attachment: fixed;
            background-size: cover;

            &:after {
                content: '';
                position: absolute;
                top: 0;
                right: 0;
                width: 100%;
                height: 100%;
                z-index: -1;
                @include linear-gradient($primary-color, $second-color);
                opacity: 0.8;

            }
        }
    }
}

* {
    box-sizing: border-box;
}

body {

    @include linear-gradient($primary-color, $second-color);
    @include background;
    color: #d4d7dd;
    margin: 0;
    height: 100vh;
    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
}

//Heading
h1,
h2,
h3 {
    font-weight: 400;
    margin: 0;

    &.lg-heading {
        font-family: 'Righteous', cursive;
        letter-spacing: 4px;
        font-size: 6em;
        @include text3d(adjust-color($primary-shadow-color, $lightness: -12%),
            $depth: 8,
            $primaryshadowcolour: adjust-color($primary, $lightness: -20%, $saturation: +20%));
    }

    &.sm-heading {
        font-family: 'Teko', sans-serif;
        letter-spacing: 3px;
        font-size: 3em;
        padding: 0.2rem 0rem;
        @include text3d(adjust-color($primary-shadow-color, $lightness: -12%),
            $depth: 6,
            $primaryshadowcolour: adjust-color($primary, $lightness: -20%, $saturation: +10%));

    }
}

a {
    text-decoration: none;
    color: white;
}

header {
    position: fixed;
    z-index: 2;
    width: 100%;
}

main {
    padding: 6rem;
    height: 100%;
    position: relative;

    .icons {
        display: flex;
        justify-content: flex-end;
        position: absolute;

        bottom: 0px;
        right: 0px;
        background-color: red;
        padding: 1.5rem 0;
        width: 100%;
        box-shadow: -12px 10px black;

        a {
            color: #eeeeee;
            margin: 0 2em;
            font-size: 0.8em;
            @include text3d(adjust-color($primary-shadow-color, $lightness: -62%),
                $depth: 1,
                $primaryshadowcolour: adjust-color(#fff, $lightness: -80%, $saturation: +70%));
            @include easeInOut();

            &:hover {
                @include text3d(adjust-color($primary-shadow-color, $lightness: -22%),
                    $depth: 5,
                    $primaryshadowcolour: adjust-color(#fff, $lightness: -30%, $saturation: +0%));
                transform: scale(1.2);
            }
        }

        a:last-child {
            margin-right: 3rem;
        }

    }

    &#home {
        overflow: hidden;

        h1 {
            margin-top: 20vh;
        }
    }
}


.icons::after {
    content: '';
    width: 100%;
    height: 100%;
    position: absolute;
    top: -3px;
    left: 0px;
    background-color: #000;
    z-index: -1;
    filter: blur(5px);
}